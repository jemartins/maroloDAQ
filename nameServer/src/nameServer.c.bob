/*=======================================================

FILE:		nameServer.c

DESCRIPTION:	
This file contains main source for nameServer.

    Copyright (C) 2006 DrDAQ Application Project.

    This software is in the public domain.
    Permission to use, copy, modify, and distribute this software and its
    documentation for any purpose and without fee is hereby granted,
    without any conditions or restrictions.
    This software is provided "as is" without express or implied warranty.

    If you discover a bug or add an enhancement here's how to reach us:

        https://sourceforge.net/projects/drdaq

Revision history:
=======================================================
$Log: nameServer.c.bob,v $
Revision 1.1  2006/07/06 18:16:41  bobfcsoft
seed code

=====================================================*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

#include "nameServerMsgs.h"

#define _ALLOC
#include "nameServer.h"
#undef _ALLOC

#include "nameServerProto.h"
#include "loggerProto.h"

/*----------------------------------------
	nameServer - entry point
----------------------------------------*/
int main(int argc, char **argv)
{
static char *fn="nameServer";
NAME_TOKEN *token;
char *fromWhom;
int nbytes;

initialize(argc, argv);

token=(NAME_TOKEN *)inArea;
while(1)
	{
	nbytes = Receive(&fromWhom, inArea, 8192);

	switch(*token)
		{
		case REQUEST_NAME:
			{
                        NAME_SERVER_MSG *inMsg;
                    
                        inMsg=(NAME_SERVER_MSG *)inArea;

			fcLogx(__FILE__, fn,
				globalMask,
				TRACE_MISC,
				"REQUEST"
				);

			Reply(fromWhom,NULL,0);
			}
			break;

		case FREE_NAME:
			{
                        NAME_SERVER_MSG *inMsg;
                    
                        inMsg=(NAME_SERVER_MSG *)inArea;

			fcLogx(__FILE__, fn,
				globalMask,
				TRACE_MISC,
				"FREE ID=%d",
				inMsg->ID
				);

			Reply(fromWhom,NULL,0);
			}
			break;
	
		default:
			fcLogx(__FILE__, fn,
				globalMask,
				TRACE_MISC,
				"unknown token=%d",
				*token);

			Reply(fromWhom,NULL,0);
		break;
		}
	} // end while

name_detach();

exit(1);
}// end nameServer
